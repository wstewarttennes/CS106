import java.util.*;

public class Input {
	public void input(TreeSet<String> allTeams, TreeSet<String> Players) {
		Scanner console = new Scanner(System.in);
	
		//Introduce program
		System.out.println("Welcome to the NBA Statistical Database!");
		System.out.println("Enter 'A' to sort by individual player.");
		System.out.println("Enter 'B' to sort by team.");
		System.out.println("Or enter 'C' to sort by all NBA");
		
		String answer = console.next();
		//sort by individual players
		if (answer.equalsIgnoreCase("a")) {
			players(console, allTeams, Players);
		//sort by teams
		} else if (answer.equalsIgnoreCase("b")) {
			teams(console, allTeams, Players);
		//sort by allNBA
		} else if (answer.equalsIgnoreCase("c")) {
			allNBA(console);
		//did not enter a valid letter!
		} else {
			System.out.println("Please enter a valid letter!");
			input(allTeams, Players);
		}
		console.close();
	}
	//ask to enter a player's name or print list of all players
	public void players(Scanner console, TreeSet<String> allTeams, TreeSet<String> Players) {
			//for the first time the players methods are run
			System.out.println("Please enter a players name, or enter \"list\" to see a full alphabetical list of players.");
			String player = console.nextLine();
			players2(console, player, allTeams, Players);
	}

	public void players2(Scanner console, String player, TreeSet<String> allTeams, TreeSet<String> Players) {
		//list NBA players if user types "list"
		if (player.equalsIgnoreCase("list")) {
			System.out.println(Players);
			players(console, allTeams, Players);
		//print stats of individual nba players
		} else if (Players.contains(player.toLowerCase())) {
			System.out.println("print their stats");
			comparePlayers(console, allTeams, Players);
		//player not found...
		} else {
			System.out.println("Player not found, please enter a player's name, \"list\", or \"Main\" to return to the main menu.");
			String string = console.next();
			//return to the main menu
			if (string.equalsIgnoreCase("Main")) {
				input(allTeams, Players);
			//retry player name
			} else {
				players2(console, string, allTeams, Players);
			}
		}
	}
	
	public void teams(Scanner console, TreeSet<String> allTeams, TreeSet<String> Players) {
		//for the first time the players methods are run
		System.out.println("Please enter a team's city (e.x. Boston), or enter \"list\" to see a full alphabetical list of teams.");
		String team = console.next();
		teams2(console, team, allTeams, Players);
	}

public void teams2(Scanner console, String team, TreeSet<String> allTeams, TreeSet<String> Players) {
	//list NBA teams if user types "list"
	if (team.equalsIgnoreCase("list")) {
		System.out.println(allTeams);
		teams(console, allTeams, Players);
	//print stats of team
	} else if (allTeams.contains(team.toLowerCase())) {
		System.out.println("print their stats");
		compareTeams(console, allTeams, Players);
	//team not found...
	} else {
		System.out.println("Team not found, please enter a team name, \"list\", or \"Main\" to return to the main menu.");
		String string = console.next();
		//return to the main menu
		if (string.equalsIgnoreCase("Main")) {
			input(allTeams, Players);
		//retry player name
		} else {
			players2(console, string, allTeams, Players);
		}
	}
	}
	
	public void allNBA(Scanner console) {
		System.out.println("allNBA");
	}
	
	public void comparePlayers(Scanner console, TreeSet<String> allTeams, TreeSet<String> Players) {
		System.out.println("Would you like to compare two players?");
		
	}
	public void compareTeams(Scanner console, TreeSet<String> allTeams, TreeSet<String> Players) {
		System.out.println("Would you like to compare two teams?");
	}

}
